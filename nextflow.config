params {
    help = false
    out_dir = "/vast/scratch/users/zeglinski.k/results"
    fastq_dir = "$projectDir/test_data/reads/"
    threads = 4
    num_consensus = 999
    organism = "rat"
    igblast_databases = "$projectDir/references/igblast/"
    reference_sequences = "$projectDir/references/reference_sequences/"
    sample_sheet = "$projectDir/test_data/sample_sheet.csv"
    min_barcode = 0
    max_barcode = 192
    enable_conda = true
    trim_3p = "A{20}N{90}"
    trim_5p = "N{90}T{20}"
}

executor {
    $local {
        cpus = 4
        memory = "8 GB"
    }
}

profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
            runOptions = '-B /vast -B /stornext -B /wehisan'
        }
    }


    // profile using conda environments
    conda {
    docker.enabled = false
    process {
        withLabel:wfplasmid {
            conda = "${projectDir}/environment.yaml"
        }
        shell = ['/bin/bash', '-euo', 'pipefail']
    }
    conda {
        enabled = true // required for 22.08
        cacheDir = ""
        useMamba = true
    }
}


    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wfplasmid {
                container = "${params.aws_image_prefix}-wf-clone-validation:${params.wfversion}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}